<?php
class Form {
  protected $data;
  protected $fields = array();
  
  protected $posted = FALSE;
  protected $validated;
  
  public function __construct($post = array()) {
    $this->addFields(array('form_class' => array(
      '#type' => 'hidden',
      '#value' => __CLASS__,
    )));
    
    if (count($post)) {
      $this->posted = TRUE;
      $this->data = $post;
    }
  }
  
  public function addFields($fields = array()) {
    $this->fields = array_merge($this->fields, $fields);
    return $this;
  }
  
  public function build() {
    return $this->fields;
  }
  
  public function isPosted() {
    return $this->posted;
  }
  
  public function isValid() {
    if (!$this->validated) $this->validate();
    return $this->validated;
  }  

  public function validate() {  }
  public function submit() {  }
  /**
   * OOP Alias of form_set_error
   * @param string $field The field to set the error on
   * @param string $msg The message to prompt the user with
   */
  public function setError($field, $msg) {
    $validated = FALSE;
    form_set_error($field, $msg);
  }
}